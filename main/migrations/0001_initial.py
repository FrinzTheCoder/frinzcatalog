# Generated by Django 5.0.1 on 2024-01-19 09:49

import main.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(max_length=15)),
                ('is_like', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('MONERA', 'Monera'), ('PROTIST', 'Protist'), ('FUNGI', 'Fungi'), ('PLANTAE', 'Plantae'), ('ANIMALIA', 'Animalia'), ('RANDOM', 'Random/Unidentified')], default=main.models.Category['RANDOM'], max_length=20)),
                ('name', models.CharField(max_length=255)),
                ('latin_name', models.CharField(default='Unknown', max_length=255)),
                ('resource', models.URLField()),
                ('location_found', models.CharField(default='Unknown', max_length=255)),
                ('description', models.TextField(default='')),
                ('comment', models.ManyToManyField(blank=True, to='main.comment')),
                ('likes', models.ManyToManyField(blank=True, to='main.like')),
                ('tags', models.ManyToManyField(blank=True, to='main.tag')),
            ],
        ),
    ]
